{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","quote","setQuote","author","setAuthor","id","className","onClick","fetch","then","res","json","obj","content","FacebookShareButton","url","FacebookIcon","size","round","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA2DeA,MAtDf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAWA,OAAS,8BAEL,sBACIC,GAAK,YACTC,UAAY,kBAFZ,UAGA,sBACID,GAAK,OADT,cACkB,kCAAQJ,EAAR,UAClB,sBACII,GAAK,SADT,cACoB,kCAAQF,EAAR,UAEpB,qBACIE,GAAK,YATT,IAYM,wBACCE,QAxBW,WAClBC,MAAM,iCAAiCC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAC3D,SAACG,GACGV,EAASU,EAAIC,SACbT,EAAUQ,EAAIT,YAqBtBE,GAAK,YAFC,yBAZN,IAcwC,sBACpCA,GAAK,eAD+B,UAExC,eACAS,EAAA,EADA,CACoBC,IAAQ,4BAD5B,UAEA,cACAC,EAAA,EADA,CACaC,KAAS,GACtBC,OAAU,EAFV,eAFA,OAFwC,IAOlB,eACtBC,EAAA,EADsB,CACFJ,IAAQ,4BADN,UAEtB,cACAK,EAAA,EADA,CACaH,KAAS,GACtBC,OAAU,IAJY,OAPkB,OAdxC,UCROG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAQ,cACb,IAAMC,WADO,UAEb,cACA,EADA,MAIAC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.e028c135.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nimport { FacebookShareButton, FacebookIcon, TelegramShareButton, TelegramIcon } from \"react-share\";\n\n\nfunction App() {\n    const [quote, setQuote] = useState(\"\")\n    const [author, setAuthor] = useState(\"\")\n\n    const clickedButton = () => {\n        fetch(\"http://api.quotable.io/random\").then(res => res.json()).then(\n            (obj) => {\n                setQuote(obj.content);\n                setAuthor(obj.author);\n                // console.log(obj);\n            }\n        )\n    }\n    return ( <\n        div >\n        <\n        div id = \"quote-box\"\n        className = \"container-fluid\" >\n        <\n        div id = \"text\" > < p > { quote } < /p></div >\n        <\n        div id = \"author\" > < p > { author } < /p></div >\n\n        <\n        div id = \"buttons\" >\n\n        <\n        /div> <\n        button onClick = { clickedButton }\n        id = \"new-quote\" > New Quote < /button> <\n        div id = \"social-media\" >\n        <\n        FacebookShareButton url = { \"https://www.facebook.com/\" } >\n        <\n        FacebookIcon size = { 32 }\n        round = { true } > < /FacebookIcon> < /\n        FacebookShareButton > <\n        TelegramShareButton url = { \"https://www.telegram.com/\" } >\n        <\n        TelegramIcon size = { 32 }\n        round = { true }\n        /> < /\n        TelegramShareButton > <\n        /div> < /\n        div >\n\n\n\n        <\n        /div>\n\n    );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}